{
    "openapi": "3.0.0",
    "info": {
      "title": "Treasure Kitchen API",
      "description": "Treasure Kitchen Project Server",
      "contact": {
        "email": "ojotobar@gmail.com"
      },
      "license": {
        "name": "Apache 2.0",
        "url": "https:apache.org"
      },
      "version": "1.0"
    },
    "servers": [
      {
        "url": "http://localhost:5500",
        "variables": {}
      }
    ],
    "paths": {
      "/api/employees/positions": {
        "post": {
          "tags": [
            "positions"
          ],
          "summary": "Create A New Position",
          "operationId": "CreateANewPosition",
          "parameters": [],
          "requestBody": {
            "description": "The name field is the position name",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreateANewPositionRequest"
                    },
                    {
                      "example": {
                        "name": "string"
                      }
                    }
                  ]
                },
                "example": {
                  "name": "string"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "headers": {}
            },
            "400": {
              "description": "Bad Request",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized",
              "headers": {}
            },
            "403": {
              "description": "Forbidden",
              "headers": {}
            },
            "500": {
              "description": "Server Error",
              "headers": {}
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "get": {
          "tags": [
            "positions"
          ],
          "summary": "Get The List Of All Positions",
          "operationId": "GetTheListOfAllPositions",
          "parameters": [],
          "responses": {
            "200": {
              "description": "OK",
              "headers": {}
            },
            "400": {
              "description": "Bad Request",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized",
              "headers": {}
            },
            "403": {
              "description": "Forbidden",
              "headers": {}
            },
            "500": {
              "description": "Server Error",
              "headers": {}
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/employees/departments": {
        "post": {
          "tags": [
            "departments"
          ],
          "summary": "Create New Department",
          "operationId": "CreateNewDepartment",
          "parameters": [],
          "requestBody": {
            "description": "Name: Department's given name",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreateNewDepartmentRequest"
                    },
                    {
                      "example": {
                        "name": "string"
                      }
                    }
                  ]
                },
                "example": {
                  "name": "string"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "headers": {}
            },
            "400": {
              "description": "Bad Request",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized",
              "headers": {}
            },
            "403": {
              "description": "Forbidden",
              "headers": {}
            },
            "500": {
              "description": "Server Error",
              "headers": {}
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "get": {
          "tags": [
            "departments"
          ],
          "summary": "Get The List Of All Departments",
          "operationId": "GetTheListOfAllDepartments",
          "parameters": [],
          "responses": {
            "200": {
              "description": "OK",
              "headers": {}
            },
            "400": {
              "description": "Bad Request",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized",
              "headers": {}
            },
            "403": {
              "description": "Forbidden",
              "headers": {}
            },
            "500": {
              "description": "Server Error",
              "headers": {}
            }
          },
          "deprecated": false
        }
      },
      "/api/employees": {
        "post": {
          "tags": [
            "employees"
          ],
          "summary": "Create A New Employee",
          "operationId": "CreateANewEmployee",
          "parameters": [],
          "requestBody": {
            "description": "This endpoint creates a new Employee profile.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreateANewEmployeeRequest"
                    },
                    {
                      "example": {
                        "firstName": "string",
                        "lastName": "string",
                        "middleName": "string",
                        "emailAddress": "example@email.com",
                        "phoneNumber": "+1234567890",
                        "employmentDate": "2023-07-01",
                        "salary": 100000,
                        "positionId": "64a9cd92aacb2c3daf46778f",
                        "departmentId": "64a9cd92aacb2c3daf46778f",
                        "password": "string",
                        "confirmPassword": "string",
                        "roleId": "64a9cd92aacb2c3daf46778f"
                      }
                    }
                  ]
                },
                "example": {
                  "firstName": "string",
                  "lastName": "string",
                  "middleName": "string",
                  "emailAddress": "example@email.com",
                  "phoneNumber": "+1234567890",
                  "employmentDate": "2023-07-01",
                  "salary": 100000,
                  "positionId": "64a9cd92aacb2c3daf46778f",
                  "departmentId": "64a9cd92aacb2c3daf46778f",
                  "password": "string",
                  "confirmPassword": "string",
                  "roleId": "64a9cd92aacb2c3daf46778f"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "headers": {}
            },
            "400": {
              "description": "Bad Request",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized",
              "headers": {}
            },
            "403": {
              "description": "Forbidden",
              "headers": {}
            },
            "404": {
              "description": "Not Found",
              "headers": {}
            },
            "409": {
              "description": "Conflict",
              "headers": {}
            },
            "500": {
              "description": "Server Error",
              "headers": {}
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "get": {
          "tags": [
            "employees"
          ],
          "summary": "Get List Of All Employees",
          "operationId": "GetListOfAllEmployees",
          "parameters": [
            {
              "name": "page",
              "in": "query",
              "description": "",
              "required": true,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "integer",
                "format": "int32",
                "example": 1
              }
            },
            {
              "name": "perPage",
              "in": "query",
              "description": "",
              "required": true,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "integer",
                "format": "int32",
                "example": 10
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "headers": {}
            },
            "400": {
              "description": "Bad Request",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized",
              "headers": {}
            },
            "403": {
              "description": "Forbidden",
              "headers": {}
            },
            "500": {
              "description": "Server Error",
              "headers": {}
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/employees/{id}/update-name": {
        "patch": {
          "tags": [
            "employees"
          ],
          "summary": "Update Employee Names",
          "operationId": "UpdateEmployeeNames",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "requestBody": {
            "description": "End point ot update Employees' First, Middle, and Last names",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/UpdateEmployeeNamesRequest"
                    },
                    {
                      "example": {
                        "firstName": "string",
                        "lastName": "string",
                        "middleName": "string"
                      }
                    }
                  ]
                },
                "example": {
                  "firstName": "string",
                  "lastName": "string",
                  "middleName": "string"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "headers": {}
            },
            "400": {
              "description": "Bad Request",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized",
              "headers": {}
            },
            "403": {
              "description": "Forbidden",
              "headers": {}
            },
            "404": {
              "description": "Not Found",
              "headers": {}
            },
            "500": {
              "description": "Server Error",
              "headers": {}
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/employees/{id}/update-salary": {
        "patch": {
          "tags": [
            "employees"
          ],
          "summary": "Update Employee Salary",
          "operationId": "UpdateEmployeeSalary",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "requestBody": {
            "description": "End point to update Employees' salary",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/UpdateEmployeeSalaryRequest"
                    },
                    {
                      "example": {
                        "salary": 100000
                      }
                    }
                  ]
                },
                "example": {
                  "salary": 100000
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "headers": {}
            },
            "400": {
              "description": "Bad Request",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized",
              "headers": {}
            },
            "403": {
              "description": "Forbidden",
              "headers": {}
            },
            "404": {
              "description": "Not Found",
              "headers": {}
            },
            "500": {
              "description": "Server Error",
              "headers": {}
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/employees/{id}/update-role/{roleId}": {
        "patch": {
          "tags": [
            "employees"
          ],
          "summary": "Update Employee Role",
          "operationId": "UpdateEmployeeRole",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "roleId",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "headers": {}
            },
            "400": {
              "description": "Bad Request",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized",
              "headers": {}
            },
            "403": {
              "description": "Forbidden",
              "headers": {}
            },
            "404": {
              "description": "Not Found",
              "headers": {}
            },
            "500": {
              "description": "Server Error",
              "headers": {}
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/employees/{id}/terminate": {
        "patch": {
          "tags": [
            "employees"
          ],
          "summary": "Terminate Employee",
          "operationId": "TerminateEmployee",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "headers": {}
            },
            "400": {
              "description": "Bad Request",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized",
              "headers": {}
            },
            "403": {
              "description": "Forbidden",
              "headers": {}
            },
            "404": {
              "description": "Not Found",
              "headers": {}
            },
            "500": {
              "description": "Server Error",
              "headers": {}
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/employees/{id}/reinstate/{roleId}": {
        "patch": {
          "tags": [
            "employees"
          ],
          "summary": "Reinstate Employee",
          "operationId": "ReinstateEmployee",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "roleId",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "headers": {}
            },
            "400": {
              "description": "Bad Request",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized",
              "headers": {}
            },
            "403": {
              "description": "Forbidden",
              "headers": {}
            },
            "404": {
              "description": "Not Found",
              "headers": {}
            },
            "500": {
              "description": "Server Error",
              "headers": {}
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/employees/{id}/update-position/{positionId}": {
        "patch": {
          "tags": [
            "employees"
          ],
          "summary": "Update Employee Position",
          "operationId": "UpdateEmployeePosition",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "positionId",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "headers": {}
            },
            "400": {
              "description": "Bad Request",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized",
              "headers": {}
            },
            "403": {
              "description": "Forbidden",
              "headers": {}
            },
            "404": {
              "description": "Not Found",
              "headers": {}
            },
            "500": {
              "description": "Server Error",
              "headers": {}
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/employees/{id}/update-department/{departmentId}": {
        "patch": {
          "tags": [
            "employees"
          ],
          "summary": "Update Employee Department",
          "operationId": "UpdateEmployeeDepartment",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "departmentId",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "headers": {}
            },
            "400": {
              "description": "Bad Request",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized",
              "headers": {}
            },
            "403": {
              "description": "Forbidden",
              "headers": {}
            },
            "404": {
              "description": "Not Found",
              "headers": {}
            },
            "500": {
              "description": "Server Error",
              "headers": {}
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/employees/{id}/update-employment-date": {
        "patch": {
          "tags": [
            "employees"
          ],
          "summary": "Update Employment Date",
          "operationId": "UpdateEmploymentDate",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "requestBody": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/UpdateEmploymentDateRequest"
                    },
                    {
                      "example": {
                        "employmentDate": "2023-06-30"
                      }
                    }
                  ]
                },
                "example": {
                  "employmentDate": "2023-06-30"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "headers": {}
            },
            "400": {
              "description": "Bad Request",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized",
              "headers": {}
            },
            "403": {
              "description": "Forbidden",
              "headers": {}
            },
            "404": {
              "description": "Not Found",
              "headers": {}
            },
            "500": {
              "description": "Server Error",
              "headers": {}
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "api/employees/{id}/upload-photo": {
        "post": {
          "tags": [
            "employees"
          ],
          "summary": "Upload Employee Photo",
          "operationId": "UploadEmployeePhoto",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "requestBody": {
            "content": {
              "multipart/form-data": {
                "encoding": {},
                "schema": {
                  "required": [
                    "image"
                  ],
                  "type": "object",
                  "properties": {
                    "image": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            },
            "required": false
          },
          "responses": {
            "200": {
              "description": "OK",
              "headers": {}
            },
            "400": {
              "description": "Bad Request",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized",
              "headers": {}
            },
            "403": {
              "description": "Forbidden",
              "headers": {}
            },
            "404": {
              "description": "Not Found",
              "headers": {}
            },
            "500": {
              "description": "Server Error",
              "headers": {}
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/roles": {
        "post": {
          "tags": [
            "roles"
          ],
          "summary": "Create New Role",
          "operationId": "CreateNewRole",
          "parameters": [],
          "requestBody": {
            "description": "Endpoint to create a new role",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreateNewRoleRequest"
                    },
                    {
                      "example": {
                        "name": "string",
                        "role": 2005
                      }
                    }
                  ]
                },
                "example": {
                  "name": "string",
                  "role": 2005
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "headers": {}
            },
            "400": {
              "description": "Bad Request",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized",
              "headers": {}
            },
            "403": {
              "description": "Forbidden",
              "headers": {}
            },
            "500": {
              "description": "Server Error",
              "headers": {}
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "get": {
          "tags": [
            "roles"
          ],
          "summary": "Get A List Of All Roles",
          "operationId": "GetAllListOfRoles",
          "parameters": [],
          "responses": {
            "200": {
              "description": "OK",
              "headers": {}
            },
            "400": {
              "description": "Bad Request",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized",
              "headers": {}
            },
            "403": {
              "description": "Forbidden",
              "headers": {}
            },
            "500": {
              "description": "Server Error",
              "headers": {}
            }
          },
          "deprecated": false
        }
      },
      "/api/menus": {
        "post": {
          "tags": [
            "menus"
          ],
          "summary": "Add Menu",
          "operationId": "AddMenu",
          "parameters": [],
          "requestBody": {
            "description": "Endpoint to add a Menu. The dishes array is the array of all the dish ids to be added",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/AddMenuRequest"
                    },
                    {
                      "example": {
                        "name": "string",
                        "description": "string",
                        "dishes": [
                          "648d0d1f8e6bf9bebb2b6d1b"
                        ]
                      }
                    }
                  ]
                },
                "example": {
                  "name": "string",
                  "description": "string",
                  "dishes": [
                    "648d0d1f8e6bf9bebb2b6d1b"
                  ]
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "headers": {}
            },
            "400": {
              "description": "Bad Request",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized",
              "headers": {}
            },
            "403": {
              "description": "Forbidden",
              "headers": {}
            },
            "404": {
              "description": "Not Found",
              "headers": {}
            },
            "500": {
              "description": "Server Error",
              "headers": {}
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "get": {
          "tags": [
            "menus"
          ],
          "summary": "Get All Menus",
          "operationId": "GetAllMenus",
          "parameters": [],
          "responses": {
            "200": {
              "description": "OK",
              "headers": {}
            },
            "400": {
              "description": "Bad Request",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized",
              "headers": {}
            },
            "403": {
              "description": "Forbidden",
              "headers": {}
            },
            "500": {
              "description": "Server Error",
              "headers": {}
            }
          },
          "deprecated": false
        }
      },
      "/api/menus/{id}": {
        "get": {
          "tags": [
            "menus"
          ],
          "summary": "Get Menu By Id",
          "operationId": "GetMenuById",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "headers": {}
            },
            "400": {
              "description": "Bad Request",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized",
              "headers": {}
            },
            "403": {
              "description": "Forbidden",
              "headers": {}
            },
            "404": {
              "description": "Not Found",
              "headers": {}
            },
            "500": {
              "description": "Server Error",
              "headers": {}
            }
          },
          "deprecated": false
        },
        "put": {
          "tags": [
            "menus"
          ],
          "summary": "Update Menu",
          "operationId": "UpdateMenu",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "requestBody": {
            "description": "Endpoint to update a Menu. The dishes array is the array of all the dish ids to be added",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/UpdateMenuRequest"
                    },
                    {
                      "example": {
                        "name": "string",
                        "description": "string",
                        "dishes": [
                          "648cd753d301e88b34b6fbb4"
                        ]
                      }
                    }
                  ]
                },
                "example": {
                  "name": "string",
                  "description": "string",
                  "dishes": [
                    "648cd753d301e88b34b6fbb4"
                  ]
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "headers": {}
            },
            "400": {
              "description": "Bad Request",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized",
              "headers": {}
            },
            "403": {
              "description": "Forbidden",
              "headers": {}
            },
            "404": {
              "description": "Not Found",
              "headers": {}
            },
            "500": {
              "description": "Server Error",
              "headers": {}
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "delete": {
          "tags": [
            "menus"
          ],
          "summary": "Delete A Menu",
          "operationId": "DeleteAMenu",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "headers": {}
            },
            "400": {
              "description": "Bad Request",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized",
              "headers": {}
            },
            "403": {
              "description": "Forbidden",
              "headers": {}
            },
            "404": {
              "description": "Not Found",
              "headers": {}
            },
            "500": {
              "description": "Server Error",
              "headers": {}
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/dishes": {
        "post": {
          "tags": [
            "dishes"
          ],
          "summary": "Create A Dish",
          "operationId": "CreateADish",
          "parameters": [],
          "requestBody": {
            "content": {
              "multipart/form-data": {
                "encoding": {},
                "schema": {
                  "required": [
                    "name",
                    "description",
                    "price",
                    "image"
                  ],
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": ""
                    },
                    "description": {
                      "type": "string",
                      "example": ""
                    },
                    "price": {
                      "type": "integer",
                      "format": "int32",
                      "example": 0
                    },
                    "image": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            },
            "required": false
          },
          "responses": {
            "200": {
              "description": "OK",
              "headers": {}
            },
            "400": {
              "description": "Bad Request",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized",
              "headers": {}
            },
            "403": {
              "description": "Forbidden",
              "headers": {}
            },
            "404": {
              "description": "Not Found",
              "headers": {}
            },
            "500": {
              "description": "Server Error",
              "headers": {}
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "get": {
          "tags": [
            "dishes"
          ],
          "summary": "Get All Dishes",
          "operationId": "GetAllDishes",
          "parameters": [
            {
              "name": "page",
              "in": "query",
              "description": "",
              "required": true,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "integer",
                "format": "int32",
                "example": 1
              }
            },
            {
              "name": "perPage",
              "in": "query",
              "description": "",
              "required": true,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "integer",
                "format": "int32",
                "example": 10
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "headers": {}
            },
            "400": {
              "description": "Bad Request",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized",
              "headers": {}
            },
            "403": {
              "description": "Forbidden",
              "headers": {}
            },
            "500": {
              "description": "Server Error",
              "headers": {}
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "api/dishes/{id}": {
        "get": {
          "tags": [
            "dishes"
          ],
          "summary": "Get A Dish By Id",
          "operationId": "GetADishById",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "headers": {}
            },
            "400": {
              "description": "Bad Request",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized",
              "headers": {}
            },
            "403": {
              "description": "Forbidden",
              "headers": {}
            },
            "404": {
              "description": "Not Found",
              "headers": {}
            },
            "500": {
              "description": "Server Error",
              "headers": {}
            }
          },
          "deprecated": false
        },
        "patch": {
          "tags": [
            "dishes"
          ],
          "summary": "Update A Dish",
          "operationId": "UpdateADish",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "requestBody": {
            "description": "Endpoint to update a dish",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/UpdateADishRequest"
                    },
                    {
                      "example": {
                        "name": "string",
                        "description": "string",
                        "price": 0
                      }
                    }
                  ]
                },
                "example": {
                  "name": "string",
                  "description": "string",
                  "price": 0
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "headers": {}
            },
            "400": {
              "description": "Bad Request",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized",
              "headers": {}
            },
            "403": {
              "description": "Forbidden",
              "headers": {}
            },
            "404": {
              "description": "Not Found",
              "headers": {}
            },
            "500": {
              "description": "Server Error",
              "headers": {}
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "delete": {
          "tags": [
            "dishes"
          ],
          "summary": "Delete A Dish",
          "operationId": "DeleteADish",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "headers": {}
            },
            "400": {
              "description": "Bad Request",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized",
              "headers": {}
            },
            "403": {
              "description": "Forbidden",
              "headers": {}
            },
            "404": {
              "description": "Not Found",
              "headers": {}
            },
            "500": {
              "description": "Server Error",
              "headers": {}
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "api/dishes/{id}/upload-photo": {
        "post": {
          "tags": [
            "dishes"
          ],
          "summary": "Update Dish Photo",
          "operationId": "UpdateDishPhoto",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "requestBody": {
            "content": {
              "multipart/form-data": {
                "encoding": {},
                "schema": {
                  "required": [
                    "image"
                  ],
                  "type": "object",
                  "properties": {
                    "image": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            },
            "required": false
          },
          "responses": {
            "200": {
              "description": "OK",
              "headers": {}
            },
            "400": {
              "description": "Bad Request",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized",
              "headers": {}
            },
            "403": {
              "description": "Forbidden",
              "headers": {}
            },
            "404": {
              "description": "Not Found",
              "headers": {}
            },
            "500": {
              "description": "Server Error",
              "headers": {}
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/orders": {
        "post": {
          "tags": [
            "orders"
          ],
          "summary": "Add Order",
          "operationId": "AddOrder",
          "parameters": [],
          "requestBody": {
            "description": "Endpoint to create an order",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/AddOrderRequest"
                    },
                    {
                      "example": {
                        "dishes": [
                          "648cd753d301e88b34b6fbb4"
                        ],
                        "phoneNumber": "+1234567890"
                      }
                    }
                  ]
                },
                "example": {
                  "dishes": [
                    "648cd753d301e88b34b6fbb4"
                  ],
                  "phoneNumber": "+1234567890"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "headers": {}
            },
            "400": {
              "description": "Bad Request",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized",
              "headers": {}
            },
            "403": {
              "description": "Forbidden",
              "headers": {}
            },
            "404": {
              "description": "Not Found",
              "headers": {}
            },
            "500": {
              "description": "Server Error",
              "headers": {}
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "get": {
          "tags": [
            "orders"
          ],
          "summary": "Get All Orders",
          "operationId": "GetAllOrders",
          "parameters": [
            {
              "name": "page",
              "in": "query",
              "description": "",
              "required": true,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "integer",
                "format": "int32",
                "example": 1
              }
            },
            {
              "name": "perPage",
              "in": "query",
              "description": "",
              "required": true,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "integer",
                "format": "int32",
                "example": 10
              }
            },
            {
              "name": "status",
              "in": "query",
              "description": "",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "string",
                "example": "Pending"
              }
            },
            {
              "name": "payStatus",
              "in": "query",
              "description": "",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "string",
                "example": "NotPaid"
              }
            },
            {
              "name": "minDate",
              "in": "query",
              "description": "Minimum datetime",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "string",
                "example": "1970-01-01"
              }
            },
            {
              "name": "maxDate",
              "in": "query",
              "description": "Maximum datetime",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "string",
                "example": "9999-12-31"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "headers": {}
            },
            "400": {
              "description": "Bad Request",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized",
              "headers": {}
            },
            "403": {
              "description": "Forbidden",
              "headers": {}
            },
            "500": {
              "description": "Server Error",
              "headers": {}
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/orders/{id}": {
        "put": {
          "tags": [
            "orders"
          ],
          "summary": "Update Order",
          "operationId": "UpdateOrder",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "requestBody": {
            "description": "Endpoint to update an order. Array of dish ids and user phone number",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/UpdateOrderRequest"
                    },
                    {
                      "example": {
                        "dishes": [
                          "648cd753d301e88b34b6fbb4"
                        ],
                        "phoneNumber": "+1234567890"
                      }
                    }
                  ]
                },
                "example": {
                  "dishes": [
                    "648cd753d301e88b34b6fbb4"
                  ],
                  "phoneNumber": "+1234567890"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "headers": {}
            },
            "400": {
              "description": "Bad Request",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized",
              "headers": {}
            },
            "403": {
              "description": "Forbidden",
              "headers": {}
            },
            "500": {
              "description": "Server Error",
              "headers": {}
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "get": {
          "tags": [
            "orders"
          ],
          "summary": "Get Order By Id",
          "operationId": "GetOrderById",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "headers": {}
            },
            "400": {
              "description": "Bad Request",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized",
              "headers": {}
            },
            "403": {
              "description": "Forbidden",
              "headers": {}
            },
            "500": {
              "description": "Server Error",
              "headers": {}
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "delete": {
          "tags": [
            "orders"
          ],
          "summary": "Delete An Order",
          "operationId": "DeleteAnOrder",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "headers": {}
            },
            "400": {
              "description": "Bad Request",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized",
              "headers": {}
            },
            "403": {
              "description": "Forbidden",
              "headers": {}
            },
            "404": {
              "description": "Not Found",
              "headers": {}
            },
            "500": {
              "description": "Server Error",
              "headers": {}
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/orders/user": {
        "get": {
          "tags": [
            "orders"
          ],
          "summary": "Get Order By UserId",
          "operationId": "GetOrderByUserId",
          "parameters": [
            {
              "name": "page",
              "in": "query",
              "description": "",
              "required": true,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "integer",
                "format": "int32",
                "example": 1
              }
            },
            {
              "name": "perPage",
              "in": "query",
              "description": "",
              "required": true,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "integer",
                "format": "int32",
                "example": 10
              }
            },
            {
              "name": "status",
              "in": "query",
              "description": "",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "string",
                "example": "Pending"
              }
            },
            {
              "name": "payStatus",
              "in": "query",
              "description": "",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "string",
                "example": "NotPaid"
              }
            },
            {
              "name": "minDate",
              "in": "query",
              "description": "Minimum datetime",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "string",
                "example": "1970-01-01"
              }
            },
            {
              "name": "maxDate",
              "in": "query",
              "description": "Maximum datetime",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "string",
                "example": "9999-12-31"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "headers": {}
            },
            "400": {
              "description": "Bad Request",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized",
              "headers": {}
            },
            "403": {
              "description": "Forbidden",
              "headers": {}
            },
            "500": {
              "description": "Server Error",
              "headers": {}
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/orders/{id}/pay": {
        "patch": {
          "tags": [
            "orders"
          ],
          "summary": "Pay For An Order",
          "operationId": "PayForAnOrder",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "requestBody": {
            "description": "Endpoint to pay and confirm an order.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PayForAnOrderRequest"
                    },
                    {
                      "example": {
                        "amount": 100
                      }
                    }
                  ]
                },
                "example": {
                  "amount": 100
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "headers": {}
            },
            "400": {
              "description": "Bad Request",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized",
              "headers": {}
            },
            "403": {
              "description": "Forbidden",
              "headers": {}
            },
            "500": {
              "description": "Server Error",
              "headers": {}
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/orders/{id}/confirm": {
        "patch": {
          "tags": [
            "orders"
          ],
          "summary": "Confirm An Order",
          "operationId": "ConfirmAnOrder",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "headers": {}
            },
            "400": {
              "description": "Bad Request",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized",
              "headers": {}
            },
            "403": {
              "description": "Forbidden",
              "headers": {}
            },
            "404": {
              "description":"Not Found",
              "headers": {}
            },
            "500": {
              "description": "Server Error",
              "headers": {}
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/orders/{id}/complete": {
        "patch": {
          "tags": [
            "orders"
          ],
          "summary": "Complete An Order",
          "operationId": "CompleteAnOrder",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "headers": {}
            },
            "400": {
              "description": "Bad Request",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized",
              "headers": {}
            },
            "403": {
              "description": "Forbidden",
              "headers": {}
            },
            "404": {
              "description":"Not Found",
              "headers": {}
            },
            "500": {
              "description": "Server Error",
              "headers": {}
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/orders/{id}/tracks": {
        "get": {
          "tags": [
            "orders"
          ],
          "summary": "Get Order Tracks",
          "operationId": "GetOrderTracks",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "headers": {}
            },
            "400": {
              "description": "Bad Request",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized",
              "headers": {}
            },
            "403": {
              "description": "Forbidden",
              "headers": {}
            },
            "500": {
              "description": "Server Error",
              "headers": {}
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/tables": {
        "get": {
          "tags": [
            "tables"
          ],
          "summary": "Get All Tables",
          "operationId": "GetAllTables",
          "parameters": [],
          "responses": {
            "200": {
              "description": "OK",
              "headers": {}
            },
            "400": {
              "description": "Bad Request",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized",
              "headers": {}
            },
            "403": {
              "description": "Forbidden",
              "headers": {}
            },
            "500": {
              "description": "Server Error",
              "headers": {}
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "post": {
          "tags": [
            "tables"
          ],
          "summary": "Add A Table",
          "operationId": "AddATable",
          "parameters": [],
          "requestBody": {
            "description": "Endpoint to add a table. The number field is the table identifier, while the capacity field the number of occupants.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/AddATableRequest"
                    },
                    {
                      "example": {
                        "number": 100,
                        "capacity": 4
                      }
                    }
                  ]
                },
                "example": {
                  "number": 100,
                  "capacity": 4
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "headers": {}
            },
            "400": {
              "description": "Bad Request",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized",
              "headers": {}
            },
            "403": {
              "description": "Forbidden",
              "headers": {}
            },
            "500": {
              "description": "Server Error",
              "headers": {}
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/tables/{id}": {
        "patch": {
          "tags": [
            "tables"
          ],
          "summary": "Update A Table",
          "operationId": "UpdateATable",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "requestBody": {
            "description": "Endpoint to update table details",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/UpdateATableRequest"
                    },
                    {
                      "example": {
                        "number": 100,
                        "capacity": 8
                      }
                    }
                  ]
                },
                "example": {
                  "number": 100,
                  "capacity": 8
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "headers": {}
            },
            "400": {
              "description": "Bad Request",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized",
              "headers": {}
            },
            "403": {
              "description": "Forbidden",
              "headers": {}
            },
            "404": {
              "description":"Not Found",
              "headers": {}
            },
            "500": {
              "description": "Server Error",
              "headers": {}
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "delete": {
          "tags": [
            "tables"
          ],
          "summary": "Delete A Table",
          "operationId": "DeleteATable",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "headers": {}
            },
            "400": {
              "description": "Bad Request",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized",
              "headers": {}
            },
            "403": {
              "description": "Forbidden",
              "headers": {}
            },
            "404": {
              "description":"Not Found",
              "headers": {}
            },
            "500": {
              "description": "Server Error",
              "headers": {}
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "get": {
          "tags": [
            "tables"
          ],
          "summary": "Get A Table By Id",
          "operationId": "GetATableById",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "headers": {}
            },
            "400": {
              "description": "Bad Request",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized",
              "headers": {}
            },
            "403": {
              "description": "Forbidden",
              "headers": {}
            },
            "404": {
              "description":"Not Found",
              "headers": {}
            },
            "500": {
              "description": "Server Error",
              "headers": {}
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/tables/available": {
        "get": {
          "tags": [
            "tables"
          ],
          "summary": "Get All Available Tables",
          "operationId": "GetAllAvailableTables",
          "parameters": [],
          "responses": {
            "200": {
              "description": "OK",
              "headers": {}
            },
            "400": {
              "description": "Bad Request",
              "headers": {}
            },
            "500": {
              "description": "Server Error",
              "headers": {}
            }
          },
          "deprecated": false
        }
      },
      "/api/reservations": {
        "post": {
          "tags": [
            "reservations"
          ],
          "summary": "Add Reservation",
          "operationId": "AddReservation",
          "parameters": [],
          "requestBody": {
            "description": "DateTime field should include the actual time of the reservation. The duration is in hours. Party size is the number of people.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/AddReservationRequest"
                    },
                    {
                      "example": {
                        "customerPhone": "",
                        "dateTime": "2023-07-08T16:30",
                        "duration": 0.5,
                        "table": "64a15243dcd9678c6cc5a31d",
                        "partySize": 4
                      }
                    }
                  ]
                },
                "example": {
                  "customerPhone": "",
                  "dateTime": "2023-07-08T16:30",
                  "duration": 0.5,
                  "table": "64a15243dcd9678c6cc5a31d",
                  "partySize": 4
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "headers": {}
            },
            "400": {
              "description": "Bad Request",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized",
              "headers": {}
            },
            "403": {
              "description": "Forbidden",
              "headers": {}
            },
            "404": {
              "description":"Not Found",
              "headers": {}
            },
            "500": {
              "description": "Server Error",
              "headers": {}
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "get": {
          "tags": [
            "reservations"
          ],
          "summary": "Get All Reservations",
          "operationId": "GetAllReservations",
          "parameters": [
            {
              "name": "page",
              "in": "query",
              "description": "",
              "required": true,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "integer",
                "format": "int32",
                "example": 1
              }
            },
            {
              "name": "perPage",
              "in": "query",
              "description": "",
              "required": true,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "integer",
                "format": "int32",
                "example": 10
              }
            },
            {
              "name": "status",
              "in": "query",
              "description": "",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "string",
                "example": "Pending"
              }
            },
            {
              "name": "minDate",
              "in": "query",
              "description": "Minimum datetime",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "string",
                "example": "1970-01-01"
              }
            },
            {
              "name": "maxDate",
              "in": "query",
              "description": "Maximum datetime",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "string",
                "example": "9999-12-31"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "headers": {}
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/reservations/{id}/cancel": {
        "patch": {
          "tags": [
            "reservations"
          ],
          "summary": "Cancel A Reservation",
          "operationId": "CancelAReservation",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "headers": {}
            },
            "400": {
              "description": "Bad Request",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized",
              "headers": {}
            },
            "403": {
              "description": "Forbidden",
              "headers": {}
            },
            "404": {
              "description":"Not Found",
              "headers": {}
            },
            "500": {
              "description": "Server Error",
              "headers": {}
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/reservations/{id}/time-duration": {
        "patch": {
          "tags": [
            "reservations"
          ],
          "summary": "Update Reservation Time-Duration",
          "operationId": "UpdateReservationTime-Duration",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "requestBody": {
            "description": "Endpoint to update a reservation's time and duration.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/UpdateReservationTime-DurationRequest"
                    },
                    {
                      "example": {
                        "dateTime": "2023-07-06T17:30",
                        "duration": 0.5
                      }
                    }
                  ]
                },
                "example": {
                  "dateTime": "2023-07-06T17:30",
                  "duration": 0.5
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "headers": {}
            },
            "400": {
              "description": "Bad Request",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized",
              "headers": {}
            },
            "403": {
              "description": "Forbidden",
              "headers": {}
            },
            "404": {
              "description":"Not Found",
              "headers": {}
            },
            "500": {
              "description": "Server Error",
              "headers": {}
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/reservations/{id}/table-size": {
        "patch": {
          "tags": [
            "reservations"
          ],
          "summary": "Update Reservation Table And Size",
          "operationId": "UpdateReservationTableAndSize",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "requestBody": {
            "description": "Endpoint to update reserved table and the party size",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/UpdateReservationTableAndSizeRequest"
                    },
                    {
                      "example": {
                        "table": "64a1dabf71ebb124a8942333",
                        "partySize": 0
                      }
                    }
                  ]
                },
                "example": {
                  "table": "64a1dabf71ebb124a8942333",
                  "partySize": 0
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "headers": {}
            },
            "400": {
              "description": "Bad Request",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized",
              "headers": {}
            },
            "403": {
              "description": "Forbidden",
              "headers": {}
            },
            "404": {
              "description":"Not Found",
              "headers": {}
            },
            "500": {
              "description": "Server Error",
              "headers": {}
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/reservations/{id}/confirm": {
        "patch": {
          "tags": [
            "reservations"
          ],
          "summary": "Confirm Reservation",
          "operationId": "ConfirmReservation",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "requestBody": {
            "description": "Endpoint to make payment for reservating a table. This also updates the reservation status to Confirmed.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ConfirmReservationRequest"
                    },
                    {
                      "example": {
                        "cardNumber": "1234 5678 9123 4567",
                        "cardPin": 1234,
                        "cvv": 123
                      }
                    }
                  ]
                },
                "example": {
                  "cardNumber": "1234 5678 9123 4567",
                  "cardPin": 1234,
                  "cvv": 123
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "headers": {}
            },
            "400": {
              "description": "Bad Request",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized",
              "headers": {}
            },
            "403": {
              "description": "Forbidden",
              "headers": {}
            },
            "404": {
              "description":"Not Found",
              "headers": {}
            },
            "500": {
              "description": "Server Error",
              "headers": {}
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/reservations/user": {
        "get": {
          "tags": [
            "reservations"
          ],
          "summary": "Get All User Reservations",
          "operationId": "GetAllUserReservations",
          "parameters": [],
          "responses": {
            "200": {
              "description": "OK",
              "headers": {}
            },
            "400": {
              "description": "Bad Request",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized",
              "headers": {}
            },
            "403": {
              "description": "Forbidden",
              "headers": {}
            },
            "500": {
              "description": "Server Error",
              "headers": {}
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/employee/auth/login": {
        "post": {
          "tags": [
            "auth"
          ],
          "summary": "Login Employee",
          "operationId": "LoginEmployee",
          "parameters": [],
          "requestBody": {
            "description": "Enpoint to login Employees",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/LoginEmployeeRequest"
                    },
                    {
                      "example": {
                        "emailAddress": "example@email.com",
                        "password": "string"
                      }
                    }
                  ]
                },
                "example": {
                  "emailAddress": "example@email.com",
                  "password": "string"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "headers": {}
            },
            "400": {
              "description": "Bad Request",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized",
              "headers": {}
            },
            "403": {
              "description": "Forbidden",
              "headers": {}
            },
            "404": {
              "description":"Not Found",
              "headers": {}
            },
            "500": {
              "description": "Server Error",
              "headers": {}
            }
          },
          "deprecated": false
        }
      },
      "/api/employee/auth/confirm-email": {
        "post": {
          "tags": [
            "auth"
          ],
          "summary": "Confirm Employee Email",
          "operationId": "ConfirmEmployeeEmail",
          "parameters": [],
          "requestBody": {
            "description": "Endpoint to confirm employees email address after registration.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ConfirmEmployeeEmailRequest"
                    },
                    {
                      "example": {
                        "token": "string",
                        "email": "example@email.com"
                      }
                    }
                  ]
                },
                "example": {
                  "token": "string",
                  "email": "example@email.com"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "headers": {}
            },
            "400": {
              "description": "Bad Request",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized",
              "headers": {}
            },
            "403": {
              "description": "Forbidden",
              "headers": {}
            },
            "404": {
              "description":"Not Found",
              "headers": {}
            },
            "500": {
              "description": "Server Error",
              "headers": {}
            }
          },
          "deprecated": false
        }
      },
      "/api/employee/auth/logout": {
        "get": {
          "tags": [
            "auth"
          ],
          "summary": "Logout",
          "operationId": "Logout",
          "parameters": [],
          "responses": {
            "200": {
              "description": "OK",
              "headers": {}
            },
            "400": {
              "description": "Bad Request",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized",
              "headers": {}
            },
            "403": {
              "description": "Forbidden",
              "headers": {}
            },
            "404": {
              "description":"Not Found",
              "headers": {}
            },
            "500": {
              "description": "Server Error",
              "headers": {}
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/employee/auth/{id}/change-password": {
        "patch": {
          "tags": [
            "auth"
          ],
          "summary": "Change Employee Password",
          "operationId": "ChangeEmployeePassword",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "requestBody": {
            "description": "Endpoint to change Employee password",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ChangeEmployeePasswordRequest"
                    },
                    {
                      "example": {
                        "newPassword": "P@33w0rd",
                        "confirmNewPassword": "P@33w0rd"
                      }
                    }
                  ]
                },
                "example": {
                  "newPassword": "P@33w0rd",
                  "confirmNewPassword": "P@33w0rd"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "headers": {}
            },
            "400": {
              "description": "Bad Request",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized",
              "headers": {}
            },
            "403": {
              "description": "Forbidden",
              "headers": {}
            },
            "404": {
              "description":"Not Found",
              "headers": {}
            },
            "500": {
              "description": "Server Error",
              "headers": {}
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/employee/auth/reset-password": {
        "patch": {
          "tags": [
            "auth"
          ],
          "summary": "Reset Employee Password",
          "operationId": "ResetEmployeePassword",
          "parameters": [],
          "requestBody": {
            "description": "Endpoint to reset Employee password",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ResetEmployeePasswordRequest"
                    },
                    {
                      "example": {
                        "emailAddress": "example@email.com"
                      }
                    }
                  ]
                },
                "example": {
                  "emailAddress": "example@email.com"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "headers": {}
            },
            "400": {
              "description": "Bad Request",
              "headers": {}
            },
            "404": {
              "description":"Not Found",
              "headers": {}
            },
            "500": {
              "description": "Server Error",
              "headers": {}
            }
          },
          "deprecated": false
        }
      },
      "/api/employee/auth/change-password": {
        "patch": {
          "tags": [
            "auth"
          ],
          "summary": "Change Employee Forgotten Password",
          "operationId": "ChangeEmployeeForgottenPassword",
          "parameters": [],
          "requestBody": {
            "description": "Endpoint to Change Employee Forgotten Password",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ChangeEmployeeForgottenPasswordRequest"
                    },
                    {
                      "example": {
                        "newPassword": "string",
                        "confirmNewPassword": "string",
                        "token": "string"
                      }
                    }
                  ]
                },
                "example": {
                  "newPassword": "string",
                  "confirmNewPassword": "string",
                  "token": "string"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "headers": {}
            },
            "400": {
              "description": "Bad Request",
              "headers": {}
            },
            "404": {
              "description":"Not Found",
              "headers": {}
            },
            "409": {
              "description": "Conflict",
              "headers": {}
            },
            "500": {
              "description": "Server Error",
              "headers": {}
            }
          },
          "deprecated": false
        }
      },
      "/api/profile": {
        "get": {
          "tags": [
            "profile"
          ],
          "summary": "Get User Profile",
          "operationId": "GetUserProfile",
          "parameters": [],
          "responses": {
            "200": {
              "description": "",
              "headers": {}
            }
          },
          "deprecated": false
        }
      },
      "/api/profile/signup": {
        "post": {
          "tags": [
            "profile"
          ],
          "summary": "Register User",
          "operationId": "RegisterUser",
          "parameters": [],
          "requestBody": {
            "description": "Endpoint to register a User",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/RegisterUserRequest"
                    },
                    {
                      "example": {
                        "name": "John Doe",
                        "email": "example@email.com",
                        "password": "string",
                        "confirmPassword": "string"
                      }
                    }
                  ]
                },
                "example": {
                  "name": "John Doe",
                  "email": "example@email.com",
                  "password": "string",
                  "confirmPassword": "string"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "headers": {}
            },
            "400": {
              "description": "Bad Request",
              "headers": {}
            },
            "500": {
              "description": "Server Error",
              "headers": {}
            }
          },
          "deprecated": false
        }
      },
      "/api/profile/{id}/update-name": {
        "patch": {
          "tags": [
            "profile"
          ],
          "summary": "Update User Names",
          "operationId": "UpdateUserNames",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "requestBody": {
            "description": "Endpoint to update User's names",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/UpdateUserNamesRequest"
                    },
                    {
                      "example": {
                        "name": "John Doe"
                      }
                    }
                  ]
                },
                "example": {
                  "name": "John Doe"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "headers": {}
            },
            "400": {
              "description": "Bad Request",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized",
              "headers": {}
            },
            "403": {
              "description": "Forbidden",
              "headers": {}
            },
            "404": {
              "description":"Not Found",
              "headers": {}
            },
            "500": {
              "description": "Server Error",
              "headers": {}
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/auth/facebook/callback": {
        "get": {
          "tags": [
            "OAuth"
          ],
          "summary": "Facebook Callback URI",
          "operationId": "FacebookCallbackURI",
          "parameters": [],
          "responses": {
            "200": {
              "description": "",
              "headers": {}
            }
          },
          "deprecated": true
        }
      },
      "/auth/login": {
        "post": {
          "tags": [
            "OAuth"
          ],
          "summary": "Login User",
          "operationId": "LoginUser",
          "parameters": [],
          "requestBody": {
            "description": "Endpoint to login a User",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/LoginUserRequest"
                    },
                    {
                      "example": {
                        "emailAddress": "example@email.com",
                        "password": "string"
                      }
                    }
                  ]
                },
                "example": {
                  "emailAddress": "example@email.com",
                  "password": "string"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "headers": {}
            },
            "400": {
              "description": "Bad Request",
              "headers": {}
            },
            "404": {
              "description":"Not Found",
              "headers": {}
            },
            "500": {
              "description": "Server Error",
              "headers": {}
            }
          },
          "deprecated": false
        }
      },
      "/auth/confirm-email": {
        "patch": {
          "tags": [
            "OAuth"
          ],
          "summary": "Confirm User Email",
          "operationId": "ConfirmUserEmail",
          "parameters": [],
          "requestBody": {
            "description": "Endpoint to confirm user email using token",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ConfirmUserEmailRequest"
                    },
                    {
                      "example": {
                        "token": "string"
                      }
                    }
                  ]
                },
                "example": {
                  "token": "string"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "headers": {}
            },
            "400": {
              "description": "Bad Request",
              "headers": {}
            },
            "404": {
              "description":"Not Found",
              "headers": {}
            },
            "500": {
              "description": "Server Error",
              "headers": {}
            }
          },
          "deprecated": false
        }
      },
      "/auth/reset-password": {
        "patch": {
          "tags": [
            "OAuth"
          ],
          "summary": "Reset User Password",
          "operationId": "ResetUserPassword",
          "parameters": [],
          "requestBody": {
            "description": "Endpoint to reset User password",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ResetUserPasswordRequest"
                    },
                    {
                      "example": {
                        "emailAddress": "example@email.com"
                      }
                    }
                  ]
                },
                "example": {
                  "emailAddress": "example@email.com"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "headers": {}
            },
            "400": {
              "description": "Bad Request",
              "headers": {}
            },
            "404": {
              "description":"Not Found",
              "headers": {}
            },
            "500": {
              "description": "Server Error",
              "headers": {}
            }
          },
          "deprecated": false
        }
      },
      "/auth/change-password": {
        "patch": {
          "tags": [
            "OAuth"
          ],
          "summary": "Change User's Forgotten Password",
          "operationId": "ChangeUser'sForgottenPassword",
          "parameters": [],
          "requestBody": {
            "description": "Endpoint to change user's forgotten password",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ChangeUsersForgottenPasswordRequest"
                    },
                    {
                      "example": {
                        "newPassword": "string",
                        "confirmNewPassword": "string",
                        "token": "string"
                      }
                    }
                  ]
                },
                "example": {
                  "newPassword": "string",
                  "confirmNewPassword": "string",
                  "token": "string"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "headers": {}
            },
            "400": {
              "description": "Bad Request",
              "headers": {}
            },
            "404": {
              "description":"Not Found",
              "headers": {}
            },
            "500": {
              "description": "Server Error",
              "headers": {}
            }
          },
          "deprecated": false
        }
      },
      "/auth/{id}/change-password": {
        "patch": {
          "tags": [
            "OAuth"
          ],
          "summary": "Change User Password",
          "operationId": "ChangeUserPassword",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "requestBody": {
            "description": "Endpoint to change user's known password.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ChangeUserPasswordRequest"
                    },
                    {
                      "example": {
                        "newPassword": "string",
                        "confirmNewPassword": "string"
                      }
                    }
                  ]
                },
                "example": {
                  "newPassword": "string",
                  "confirmNewPassword": "string"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "headers": {}
            },
            "400": {
              "description": "Bad Request",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized",
              "headers": {}
            },
            "403": {
              "description": "Forbidden",
              "headers": {}
            },
            "404": {
              "description":"Not Found",
              "headers": {}
            },
            "500": {
              "description": "Server Error",
              "headers": {}
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/durations": {
        "post": {
          "tags": [
            "duration"
          ],
          "summary": "Add Duration",
          "operationId": "AddDuration",
          "parameters": [],
          "requestBody": {
            "description": "Endpoint to add Time Durations",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/AddDurationRequest"
                    },
                    {
                      "example": {
                        "inWords": "30 Minutes",
                        "inFigure": 0.5
                      }
                    }
                  ]
                },
                "example": {
                  "inWords": "30 Minutes",
                  "inFigure": 0.5
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "headers": {}
            },
            "400": {
              "description": "Bad Request",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized",
              "headers": {}
            },
            "403": {
              "description": "Forbidden",
              "headers": {}
            },
            "500": {
              "description": "Server Error",
              "headers": {}
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "get": {
          "tags": [
            "duration"
          ],
          "summary": "Get All Durations",
          "operationId": "GetAllDurations",
          "parameters": [],
          "responses": {
            "200": {
              "description": "OK",
              "headers": {}
            },
            "400": {
              "description": "Bad Request",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized",
              "headers": {}
            },
            "403": {
              "description": "Forbidden",
              "headers": {}
            },
            "500": {
              "description": "Server Error",
              "headers": {}
            }
          },
          "deprecated": false
        }
      },
      "/api/durations/{id}": {
        "put": {
          "tags": [
            "duration"
          ],
          "summary": "Update Duration",
          "operationId": "UpdateDuration",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "requestBody": {
            "description": "Endpoint to update Time Durations",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/UpdateDurationRequest"
                    },
                    {
                      "example": {
                        "inWords": "1 Hour 30 Minutes",
                        "inFigure": 1.5
                      }
                    }
                  ]
                },
                "example": {
                  "inWords": "1 Hours 30 Minutes",
                  "inFigure": 1.5
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "headers": {}
            },
            "400": {
              "description": "Bad Request",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized",
              "headers": {}
            },
            "403": {
              "description": "Forbidden",
              "headers": {}
            },
            "404": {
              "description":"Not Found",
              "headers": {}
            },
            "500": {
              "description": "Server Error",
              "headers": {}
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "delete": {
          "tags": [
            "duration"
          ],
          "summary": "Delete A Duration",
          "operationId": "DeleteADuration",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "headers": {}
            },
            "400": {
              "description": "Bad Request",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized",
              "headers": {}
            },
            "403": {
              "description": "Forbidden",
              "headers": {}
            },
            "404": {
              "description":"Not Found",
              "headers": {}
            },
            "500": {
              "description": "Server Error",
              "headers": {}
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/addresses": {
        "post": {
          "tags": [
            "address"
          ],
          "summary": "Add User Address",
          "operationId": "AddUserAddress",
          "parameters": [],
          "requestBody": {
            "description": "Endpoint to add User's address",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/AddUserAddressRequest"
                    },
                    {
                      "example": {
                        "line1": "string",
                        "line2": "",
                        "locality": "string",
                        "adminArea": "string",
                        "postalCode": "string",
                        "country": "string"
                      }
                    }
                  ]
                },
                "example": {
                  "line1": "string",
                  "line2": "",
                  "locality": "string",
                  "adminArea": "string",
                  "postalCode": "string",
                  "country": "string"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "headers": {}
            },
            "400": {
              "description": "Bad Request",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized",
              "headers": {}
            },
            "403": {
              "description": "Forbidden",
              "headers": {}
            },
            "404": {
              "description":"Not Found",
              "headers": {}
            },
            "500": {
              "description": "Server Error",
              "headers": {}
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/api/addresses/{id}": {
        "put": {
          "tags": [
            "address"
          ],
          "summary": "Update An Address",
          "operationId": "UpdateAnAddress",
          "parameters": [],
          "requestBody": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/UpdateAnAddressRequest"
                    },
                    {
                      "example": {
                        "line1": "string",
                        "line2": "",
                        "locality": "string",
                        "adminArea": "string",
                        "postalCode": "string",
                        "country": "string"
                      }
                    }
                  ]
                },
                "example": {
                  "line1": "string",
                  "line2": "",
                  "locality": "string",
                  "adminArea": "string",
                  "postalCode": "string",
                  "country": "string"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "headers": {}
            },
            "400": {
              "description": "Bad Request",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized",
              "headers": {}
            },
            "403": {
              "description": "Forbidden",
              "headers": {}
            },
            "404": {
              "description":"Not Found",
              "headers": {}
            },
            "500": {
              "description": "Server Error",
              "headers": {}
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "get": {
          "tags": [
            "address"
          ],
          "summary": "Get Address By Id",
          "operationId": "GetAddressById",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "headers": {}
            },
            "400": {
              "description": "Bad Request",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized",
              "headers": {}
            },
            "403": {
              "description": "Forbidden",
              "headers": {}
            },
            "404": {
              "description":"Not Found",
              "headers": {}
            },
            "500": {
              "description": "Server Error",
              "headers": {}
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "delete": {
          "tags": [
            "address"
          ],
          "summary": "Delete An Address",
          "operationId": "DeleteAnAddress",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "headers": {}
            },
            "400": {
              "description": "Bad Request",
              "headers": {}
            },
            "401": {
              "description": "Unauthorized",
              "headers": {}
            },
            "403": {
              "description": "Forbidden",
              "headers": {}
            },
            "404": {
              "description":"Not Found",
              "headers": {}
            },
            "500": {
              "description": "Server Error",
              "headers": {}
            }
          },
          "deprecated": false,
          "security": [
            {
              "bearer": []
            }
          ]
        }
      }
    },
    "components": {
      "schemas": {
        "CreateANewPositionRequest": {
          "title": "CreateANewPositionRequest",
          "required": [
            "name"
          ],
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            }
          },
          "example": {
            "name": "CEO"
          }
        },
        "CreateNewDepartmentRequest": {
          "title": "CreateNewDepartmentRequest",
          "required": [
            "name"
          ],
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            }
          },
          "example": {
            "name": "string"
          }
        },
        "CreateANewEmployeeRequest": {
          "title": "CreateANewEmployeeRequest",
          "required": [
            "firstName",
            "lastName",
            "middleName",
            "emailAddress",
            "phoneNumber",
            "employmentDate",
            "salary",
            "positionId",
            "departmentId",
            "password",
            "confirmPassword",
            "roleId"
          ],
          "type": "object",
          "properties": {
            "firstName": {
              "type": "string"
            },
            "lastName": {
              "type": "string"
            },
            "middleName": {
              "type": "string"
            },
            "emailAddress": {
              "type": "string"
            },
            "phoneNumber": {
              "type": "string"
            },
            "employmentDate": {
              "type": "string"
            },
            "salary": {
              "type": "integer",
              "format": "int32"
            },
            "positionId": {
              "type": "string"
            },
            "departmentId": {
              "type": "string"
            },
            "password": {
              "type": "string"
            },
            "confirmPassword": {
              "type": "string"
            },
            "roleId": {
              "type": "string"
            }
          },
          "example": {
            "firstName": "string",
            "lastName": "string",
            "middleName": "string",
            "emailAddress": "example@email.com",
            "phoneNumber": "+1234567890",
            "employmentDate": "2023-07-01",
            "salary": 1000,
            "positionId": "64a9cd92aacb2c3daf46778f",
            "departmentId": "648a80a600105844a1c6a8ca",
            "password": "string",
            "confirmPassword": "string",
            "roleId": "648a7fe800105844a1c6a8c7"
          }
        },
        "UpdateEmployeeNamesRequest": {
          "title": "UpdateEmployeeNamesRequest",
          "required": [
            "firstName",
            "lastName",
            "middleName"
          ],
          "type": "object",
          "properties": {
            "firstName": {
              "type": "string"
            },
            "lastName": {
              "type": "string"
            },
            "middleName": {
              "type": "string"
            }
          },
          "example": {
            "firstName": "string",
            "lastName": "string",
            "middleName": ""
          }
        },
        "UpdateEmployeeSalaryRequest": {
          "title": "UpdateEmployeeSalaryRequest",
          "required": [
            "salary"
          ],
          "type": "object",
          "properties": {
            "salary": {
              "type": "integer",
              "format": "int32"
            }
          },
          "example": {
            "salary": 1000
          }
        },
        "UpdateEmploymentDateRequest": {
          "title": "UpdateEmploymentDateRequest",
          "required": [
            "employmentDate"
          ],
          "type": "object",
          "properties": {
            "employmentDate": {
              "type": "string"
            }
          },
          "example": {
            "employmentDate": "2023-06-30"
          }
        },
        "CreateNewRoleRequest": {
          "title": "CreateNewRoleRequest",
          "required": [
            "name",
            "role"
          ],
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "role": {
              "type": "integer",
              "format": "int32"
            }
          },
          "example": {
            "name": "string",
            "role": 2005
          }
        },
        "AddMenuRequest": {
          "title": "AddMenuRequest",
          "required": [
            "name",
            "description",
            "dishes"
          ],
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "dishes": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": ""
            }
          },
          "example": {
            "name": "string",
            "description": "string",
            "dishes": [
              "648d0d1f8e6bf9bebb2b6d1b"
            ]
          }
        },
        "UpdateMenuRequest": {
          "title": "UpdateMenuRequest",
          "required": [
            "name",
            "description",
            "dishes"
          ],
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "dishes": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Array of dish ids"
            }
          },
          "example": {
            "name": "string",
            "description": "string",
            "dishes": [
              "648cd753d301e88b34b6fbb4"
            ]
          }
        },
        "UpdateADishRequest": {
          "title": "UpdateADishRequest",
          "required": [
            "name",
            "description",
            "price"
          ],
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "price": {
              "type": "integer",
              "format": "int32"
            }
          },
          "example": {
            "name": "string",
            "description": "string",
            "price": 100
          }
        },
        "AddOrderRequest": {
          "title": "AddOrderRequest",
          "required": [
            "dishes",
            "phoneNumber"
          ],
          "type": "object",
          "properties": {
            "dishes": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": ""
            },
            "phoneNumber": {
              "type": "string"
            }
          },
          "example": {
            "dishes": [
              "648d0d1f8e6bf9bebb2b6d1b"
            ],
            "phoneNumber": "+1234567890"
          }
        },
        "UpdateOrderRequest": {
          "title": "UpdateOrderRequest",
          "required": [
            "dishes",
            "phoneNumber"
          ],
          "type": "object",
          "properties": {
            "dishes": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": ""
            },
            "phoneNumber": {
              "type": "string"
            }
          },
          "example": {
            "dishes": [
              "648cd753d301e88b34b6fbb4"
            ],
            "phoneNumber": "+1234567890"
          }
        },
        "PayForAnOrderRequest": {
          "title": "PayForAnOrderRequest",
          "required": [
            "amount"
          ],
          "type": "object",
          "properties": {
            "amount": {
              "type": "integer",
              "format": "int32"
            }
          },
          "example": {
            "amount": 100
          }
        },
        "AddATableRequest": {
          "title": "AddATableRequest",
          "required": [
            "number",
            "capacity"
          ],
          "type": "object",
          "properties": {
            "number": {
              "type": "integer",
              "format": "int32"
            },
            "capacity": {
              "type": "integer",
              "format": "int32"
            }
          },
          "example": {
            "number": 100,
            "capacity": 4
          }
        },
        "UpdateATableRequest": {
          "title": "UpdateATableRequest",
          "required": [
            "number",
            "capacity"
          ],
          "type": "object",
          "properties": {
            "number": {
              "type": "integer",
              "format": "int32"
            },
            "capacity": {
              "type": "integer",
              "format": "int32"
            }
          },
          "example": {
            "number": 100,
            "capacity": 4
          }
        },
        "AddReservationRequest": {
          "title": "AddReservationRequest",
          "required": [
            "customerPhone",
            "dateTime",
            "duration",
            "table",
            "partySize"
          ],
          "type": "object",
          "properties": {
            "customerPhone": {
              "type": "string"
            },
            "dateTime": {
              "type": "string"
            },
            "duration": {
              "type": "integer",
              "format": "int32"
            },
            "table": {
              "type": "string"
            },
            "partySize": {
              "type": "integer",
              "format": "int32"
            }
          },
          "example": {
            "customerPhone": "",
            "dateTime": "2023-07-08T16:30",
            "duration": 2,
            "table": "64a15243dcd9678c6cc5a31d",
            "partySize": 4
          }
        },
        "UpdateReservationTime-DurationRequest": {
          "title": "UpdateReservationTime-DurationRequest",
          "required": [
            "dateTime",
            "duration"
          ],
          "type": "object",
          "properties": {
            "dateTime": {
              "type": "string"
            },
            "duration": {
              "type": "integer",
              "format": "int32"
            }
          },
          "example": {
            "dateTime": "2023-07-06T17:30",
            "duration": 3
          }
        },
        "UpdateReservationTableAndSizeRequest": {
          "title": "UpdateReservationTableAndSizeRequest",
          "required": [
            "table",
            "partySize"
          ],
          "type": "object",
          "properties": {
            "table": {
              "type": "string"
            },
            "partySize": {
              "type": "integer",
              "format": "int32"
            }
          },
          "example": {
            "table": "64a1dabf71ebb124a8942333",
            "partySize": 4
          }
        },
        "ConfirmReservationRequest": {
          "title": "ConfirmReservationRequest",
          "required": [
            "cardNumber",
            "cardPin",
            "cvv"
          ],
          "type": "object",
          "properties": {
            "cardNumber": {
              "type": "string"
            },
            "cardPin": {
              "type": "integer",
              "format": "int32"
            },
            "cvv": {
              "type": "integer",
              "format": "int32"
            }
          },
          "example": {
            "cardNumber": "1234 5678 9123 4567",
            "cardPin": 1234,
            "cvv": 123
          }
        },
        "LoginEmployeeRequest": {
          "title": "LoginEmployeeRequest",
          "required": [
            "emailAddress",
            "password"
          ],
          "type": "object",
          "properties": {
            "emailAddress": {
              "type": "string"
            },
            "password": {
              "type": "string"
            }
          },
          "example": {
            "emailAddress": "example@email.com",
            "password": "string"
          }
        },
        "ConfirmEmployeeEmailRequest": {
          "title": "ConfirmEmployeeEmailRequest",
          "required": [
            "token",
            "email"
          ],
          "type": "object",
          "properties": {
            "token": {
              "type": "string"
            },
            "email": {
              "type": "string"
            }
          },
          "example": {
            "token": "string",
            "email": "example@email.com"
          }
        },
        "ChangeEmployeePasswordRequest": {
          "title": "ChangeEmployeePasswordRequest",
          "required": [
            "newPassword",
            "confirmNewPassword"
          ],
          "type": "object",
          "properties": {
            "newPassword": {
              "type": "string"
            },
            "confirmNewPassword": {
              "type": "string"
            }
          },
          "example": {
            "newPassword": "string",
            "confirmNewPassword": "string"
          }
        },
        "ResetEmployeePasswordRequest": {
          "title": "ResetEmployeePasswordRequest",
          "required": [
            "emailAddress"
          ],
          "type": "object",
          "properties": {
            "emailAddress": {
              "type": "string"
            }
          },
          "example": {
            "emailAddress": "example@email.com"
          }
        },
        "ChangeEmployeeForgottenPasswordRequest": {
          "title": "ChangeEmployeeForgottenPasswordRequest",
          "required": [
            "newPassword",
            "confirmNewPassword",
            "token"
          ],
          "type": "object",
          "properties": {
            "newPassword": {
              "type": "string"
            },
            "confirmNewPassword": {
              "type": "string"
            },
            "token": {
              "type": "string"
            }
          },
          "example": {
            "newPassword": "string",
            "confirmNewPassword": "string",
            "token": "string"
          }
        },
        "RegisterUserRequest": {
          "title": "RegisterUserRequest",
          "required": [
            "name",
            "email",
            "password",
            "confirmPassword"
          ],
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string"
            },
            "password": {
              "type": "string"
            },
            "confirmPassword": {
              "type": "string"
            }
          },
          "example": {
            "name": "John Doe",
            "email": "example@email.com",
            "password": "string",
            "confirmPassword": "string"
          }
        },
        "UpdateUserNamesRequest": {
          "title": "UpdateUserNamesRequest",
          "required": [
            "name"
          ],
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            }
          },
          "example": {
            "name": "John Doe"
          }
        },
        "LoginUserRequest": {
          "title": "LoginUserRequest",
          "required": [
            "emailAddress",
            "password"
          ],
          "type": "object",
          "properties": {
            "emailAddress": {
              "type": "string"
            },
            "password": {
              "type": "string"
            }
          },
          "example": {
            "emailAddress": "example@email.com",
            "password": "string"
          }
        },
        "ConfirmUserEmailRequest": {
          "title": "ConfirmUserEmailRequest",
          "required": [
            "token"
          ],
          "type": "object",
          "properties": {
            "token": {
              "type": "string"
            }
          },
          "example": {
            "token": "string"
          }
        },
        "ResetUserPasswordRequest": {
          "title": "ResetUserPasswordRequest",
          "required": [
            "emailAddress"
          ],
          "type": "object",
          "properties": {
            "emailAddress": {
              "type": "string"
            }
          },
          "example": {
            "emailAddress": "example@email.com"
          }
        },
        "ChangeUsersForgottenPasswordRequest": {
          "title": "ChangeUsersForgottenPasswordRequest",
          "required": [
            "newPassword",
            "confirmNewPassword",
            "token"
          ],
          "type": "object",
          "properties": {
            "newPassword": {
              "type": "string"
            },
            "confirmNewPassword": {
              "type": "string"
            },
            "token": {
              "type": "string"
            }
          },
          "example": {
            "newPassword": "string",
            "confirmNewPassword": "string",
            "token": "string"
          }
        },
        "ChangeUserPasswordRequest": {
          "title": "ChangeUserPasswordRequest",
          "required": [
            "newPassword",
            "confirmNewPassword"
          ],
          "type": "object",
          "properties": {
            "newPassword": {
              "type": "string"
            },
            "confirmNewPassword": {
              "type": "string"
            }
          },
          "example": {
            "newPassword": "P@33w0rd",
            "confirmNewPassword": "P@33w0rd"
          }
        },
        "AddDurationRequest": {
          "title": "AddDurationRequest",
          "required": [
            "inWords",
            "inFigure"
          ],
          "type": "object",
          "properties": {
            "inWords": {
              "type": "string"
            },
            "inFigure": {
              "type": "integer",
              "format": "int32"
            }
          },
          "example": {
            "inWords": "30 Minutes",
            "inFigure": 0.5
          }
        },
        "UpdateDurationRequest": {
          "title": "UpdateDurationRequest",
          "required": [
            "inWords",
            "inFigure"
          ],
          "type": "object",
          "properties": {
            "inWords": {
              "type": "string"
            },
            "inFigure": {
              "type": "number"
            }
          },
          "example": {
            "inWords": "1 Hours 30 Minutes",
            "inFigure": 1.5
          }
        },
        "AddUserAddressRequest": {
          "title": "AddUserAddressRequest",
          "required": [
            "line1",
            "line2",
            "locality",
            "adminArea",
            "postalCode",
            "country"
          ],
          "type": "object",
          "properties": {
            "line1": {
              "type": "string"
            },
            "line2": {
              "type": "string"
            },
            "locality": {
              "type": "string"
            },
            "adminArea": {
              "type": "string"
            },
            "postalCode": {
              "type": "string"
            },
            "country": {
              "type": "string"
            }
          },
          "example": {
            "line1": "string",
            "line2": "",
            "locality": "string",
            "adminArea": "string",
            "postalCode": "string",
            "country": "string"
          }
        },
        "UpdateAnAddressRequest": {
          "title": "UpdateAnAddressRequest",
          "required": [
            "line1",
            "line2",
            "locality",
            "adminArea",
            "postalCode",
            "country"
          ],
          "type": "object",
          "properties": {
            "line1": {
              "type": "string"
            },
            "line2": {
              "type": "string"
            },
            "locality": {
              "type": "string"
            },
            "adminArea": {
              "type": "string"
            },
            "postalCode": {
              "type": "string"
            },
            "country": {
              "type": "string"
            }
          },
          "example": {
            "line1": "string",
            "line2": "",
            "locality": "string",
            "adminArea": "string",
            "postalCode": "string",
            "country": "string"
          }
        }
      },
      "securitySchemes": {
        "bearer": {
          "type": "http",
          "scheme": "bearer"
        }
      }
    },
    "security": [],
    "tags": [
      {
        "name": "positions"
      },
      {
        "name": "departments"
      },
      {
        "name": "employees"
      },
      {
        "name": "roles"
      },
      {
        "name": "menus"
      },
      {
        "name": "dishes"
      },
      {
        "name": "orders"
      },
      {
        "name": "tables"
      },
      {
        "name": "reservations"
      },
      {
        "name": "auth"
      },
      {
        "name": "profile"
      },
      {
        "name": "OAuth"
      },
      {
        "name": "duration"
      },
      {
        "name": "address"
      }
    ]
  }